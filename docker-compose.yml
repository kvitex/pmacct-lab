version: '3.5'
services:
  kafka_ui:
    image: obsidiandynamics/kafdrop:latest
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    labels:
      - "traefik.enable=true"
      - "traefik.backend=kafka_ui"
      - "traefik.port=9000"
      - "traefik.frontend.rule=Host:${KAFKA_UI_HOST}"
      - "traefik.frontend.auth.basic.users=${BASIC_AUTH}"
    restart: always
  zookeeper:
    image: wurstmeister/zookeeper
    expose:
      - "2181"
    restart: always
  kafka:
    image: wurstmeister/kafka
    expose:
      - "9092"
    # ports:
    #   - target: 9094
    #     published: 9094
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092 
      # KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://outside_address:9094
      KAFKA_LISTENERS: INSIDE://:9092
      # KAFKA_LISTENERS: INSIDE://:9092, OUTSIDE://:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT, OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
  sfacct:
    restart: always
    image: pmacct-sflow-kafka
    volumes:
      - "./sfacctd.conf:/etc/pmacct/sfacctd.conf"
    ports:
      - target: 6343
        published: 6343
        protocol: udp
  victoria: 
    restart: always
    image: victoriametrics/victoria-metrics:${VM_VERSION}
    volumes:
      -  "vmdata:/victoria-metrics-data"
    command:
      - "-retentionPeriod" 
      - "${VM_RETENTION}"
    expose:
      - "8428"
    restart: always
  grafana:
    container_name: grafana
    restart: unless-stopped
    environment:
      GF_SERVER_ROOT_URL: '${GRAFANA_ROOT_URL}'
      GF_SECURITY_ADMIN_PASSWORD: '${GRAFANA_ADMIN_PASSWORD}'
      GF_AUTH_ANONYMOUS_ENABLED: 'false'
      GF_AUTH_ANONYMOUS_ORG_NAME: 'Main'
      GF_AUTH_ANONYMOUS_ROLE: 'Viewer'
    image: grafana/grafana:${GRAFANA_VERSION}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=grafana"
      - "traefik.port=3000"
      - "traefik.frontend.rule=Host:${GRAFANA_HOST}"
    expose:
      - "3000"
    volumes:
      - "grafana_data:/var/lib/grafana"
  pmacct_kafka_vm:
    image: kvitex/pmacct-kafka-vm
    depends_on:
      - kafka
    env_file: pmacct-kafka-vm.env
    expose:
      - "9003"
    restart: always
  traefik:
    image: traefik:${TRAEFIK_VERSION}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=traefik"
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host:${TRAEFIK_HOST}"
      - "traefik.frontend.auth.basic.users=${BASIC_AUTH}"
    command:
      - "--logLevel=INFO"
      - "--defaultentrypoints=http,https"
      - "--entryPoints=Name:http Address::80 Redirect.EntryPoint:https"
      - "--entryPoints=Name:https Address::443 TLS"
      - "--entryPoints=Name:traefik Address::8080"
      - "--api"
      - "--docker"
      - "--docker.exposedbydefault=false"
      - "--docker.domain=docker.loc"
      - "--acme=true"
      - "--acme.acmelogging=true"
      - "--acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      - "--acme.email=${ACME_EMAIL}"
      - "--acme.storage=/etc/traefik/certs/acme.json"
      - "--acme.entryPoint=https"
      - "--acme.onhostrule=true"
      - "--acme.httpchallenge=true"
      - "--acme.httpchallenge.entrypoint=http"
    ports:
      - target: 80
        published: 80
        protocol: tcp
      - target: 443
        published: 443
        protocol: tcp
    expose:
      - 8080
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "traefik_certs:/etc/traefik/certs"
    restart: always
volumes:
  grafana_data:
  traefik_certs:
  vmdata:
